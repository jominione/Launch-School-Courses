// If we have `Car` class and a `Truck` class, how can you use the `Speed`
// object as a mix-in to make them `goFast`? How can you check whether your
// `Car` or `Truck` can now go fast?

const Speed = {
  goFast() {
    console.log(`I'm a ${this.constructor.name} and going super fast!`);
  }
};

/*
class Car {
  goSlow() {
    console.log(`I'm safe and driving slow.`);
  }
}

class Truck {
  goVerySlow() {
    console.log(`I'm a heavy truck and like going very slow.`);
  }
}
*/

// Solution:

class Car {
  goSlow() {
    console.log(`I'm safe and driving slow.`);
  }
  
}
Object.assign(Car.prototype, Speed);

class Truck {
  goVerySlow() {
    console.log(`I'm a heavy truck and like going very slow.`);
  }
  
}
Object.assign(Truck.prototype, Speed);

// To check whether instances of `Car` and `Truck` will respond to `Speed`
// method call use the `in` operator.

let fastCar = new Car;
let fastTruck = new Truck;

console.log(`goFast` in fastCar);
console.log(`goFast` in fastTruck);