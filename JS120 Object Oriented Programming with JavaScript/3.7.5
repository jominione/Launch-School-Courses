/*
This solution has brought us closer to our object-oriented ideal, but also
introduced some inefficency, insofar as our `setPrice` and `describe` methods
are duplciated in each object, and we will have to type out this code for
each new object we want to cretae. One solution to this problem is to stop
manually creating such object, and instead use a factory function to generate
them. Create a new function `createProduct` which takes arguments for `id`,
`name`, `stock`, and `price` and also adds `setPrice` and `describe` to the
new object.
*/

// Solution:

function createProduct(id, name, stock, price) {
  return {
    id,
    name,
    stock,
    price,
    setPrice(newPrice) {
      if (newPrice >= 0) {
        this.price = newPrice;
      } else {
        console.log('Invalid price!');
      }
    },
    describe() {
      console.log(`Name: ${this.name}`);
      console.log(`ID: ${this.id}`);
      console.log(`Price: $${this.price}`);
      console.log(`Stock: ${this.stock}`);
    },
  };
}