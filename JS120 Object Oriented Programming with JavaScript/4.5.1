// Suppose we have the following classes:

class Game {
  play() {
    return 'Start the game!';
  }
}

class Bingo extends Game {
  rulesOfPlay() {
    // rules of play
  }
}

/*
What would happen if we added `play` method to the `Bingo` class, keeping
in mind that there is already a method of this name in the `Game` class from
which the `Bingo` class inherits? Explain your answer. What do we call it
when we define a method like this?
*/

// Solution: If you add a `play` method to the `Bingo` class and instance
// invokes this method, it will execute the implementation defined in the 
// `Bingo` class as the method lookup sequence first looks for the method
// with that name in its object and if it not defined there, only then looks
// at the object's prototype.