// Update the `createInvoice` function so  that it can add payment(s) to
// invoices. Use the following code as a guideline:

let invoice = createInvoice({
  phone: 1200,
  internet: 4000,
});

let payment1 = createPayment({ amount: 2000 });
let payment2 = createPayment({
  phone: 1000,
  internet: 1200
});

let payment3 = createPayment({ phone: 1000 });

invoice.addPayment(payment1);
invoice.addPayment([payment2, payment3]);
console.log(invoice.amountDue());    // this should return 0

// Solution:

function createPayment(services = {}) {
  return {
    phone: services.phone || 0,
    internet: services.internet || 0,
    total() {
      return services.amount || (this.phone + this.internet);
    },
  };
}

function createInvoice(services = {}) {

  return {
    phone: services.phone || 3000,
    internet: services.internet || 5500,
    total() {
      return this.phone + this.internet;
    },
    payments: [],

    addPayment(args) {
      let paymentsArray = Array.isArray(args) ? args : [args];
      paymentsArray.forEach( payment => this.payments.push(payment) );
    },
    paymentTotal() {
      return this.payments.reduce((sum, payment) => sum + payment.total(), 0);
    },
    amountDue() {
      return this.total() - this.paymentTotal();
    },
  };
}